[{"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\index.js":"1","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\App.js":"2","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\routes.js":"3","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Repositorio\\index.js":"4","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Main\\index.js":"5","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Main\\styles.js":"6","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\styles\\global.js":"7","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\services\\api.js":"8","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Repositorio\\styles.js":"9","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\index.js":"10","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\App.js":"11","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\routes.js":"12","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\styles\\global.js":"13","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Main\\index.js":"14","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Repositorio\\index.js":"15","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Main\\styles.js":"16","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Repositorio\\styles.js":"17","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\services\\api.js":"18"},{"size":196,"mtime":1682825306044,"results":"19","hashOfConfig":"20"},{"size":209,"mtime":1682691164360,"results":"21","hashOfConfig":"20"},{"size":480,"mtime":1682689758903,"results":"22","hashOfConfig":"20"},{"size":4066,"mtime":1682900267129,"results":"23","hashOfConfig":"20"},{"size":3933,"mtime":1682900321540,"results":"24","hashOfConfig":"20"},{"size":2184,"mtime":1682898139323,"results":"25","hashOfConfig":"20"},{"size":508,"mtime":1682691097861,"results":"26","hashOfConfig":"20"},{"size":123,"mtime":1682705377920,"results":"27","hashOfConfig":"20"},{"size":2842,"mtime":1682897998373,"results":"28","hashOfConfig":"20"},{"size":196,"mtime":1682825306044,"results":"29","hashOfConfig":"30"},{"size":209,"mtime":1682691164360,"results":"31","hashOfConfig":"30"},{"size":480,"mtime":1682689758903,"results":"32","hashOfConfig":"30"},{"size":508,"mtime":1682691097861,"results":"33","hashOfConfig":"30"},{"size":3933,"mtime":1682900321540,"results":"34","hashOfConfig":"30"},{"size":4066,"mtime":1682900267129,"results":"35","hashOfConfig":"30"},{"size":2184,"mtime":1682898139323,"results":"36","hashOfConfig":"30"},{"size":2842,"mtime":1682897998373,"results":"37","hashOfConfig":"30"},{"size":123,"mtime":1682705377920,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1akrcj3",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cogvtb",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\index.js",[],[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\App.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\routes.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Repositorio\\index.js",["95"],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Main\\index.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Main\\styles.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\styles\\global.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\services\\api.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\project-repos\\src\\pages\\Repositorio\\styles.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\index.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\App.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\routes.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\styles\\global.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Main\\index.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Repositorio\\index.js",["96"],[],"import React, {useState, useEffect} from \"react\";\nimport { Container, Owner, Loading, BackButton, IssuesList, PageActions, FilterList } from \"./styles\";\nimport { FaArrowLeft } from \"react-icons/fa\";\nimport api from '../../services/api';\n\nexport default function Repositorio({match}) {\n\n    // {} pois é apenas um único objeto, por isso não usei o array [].\n    const [repositorio, setRepositorio] = useState({});\n    const [issues, setIssues] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(1);\n    const [filters, setFilters] = useState([\n        { state: 'all', label: 'All', active: true },\n        { state: 'open', label: 'Open', active: true },\n        { state: 'closed', label: 'Closed', active: false },\n]);\n\n    const [filterIndex, setFilterIndex] = useState(0);\n\n    useEffect(() => {\n\n        async function load() {\n            const nomeRepo = decodeURIComponent(match.params.repositorio);\n\n            const [repositorioData, issuesData] = await Promise.all([\n                api.get(`/repos/${nomeRepo}`),\n                api.get(`/repos/${nomeRepo}/issues`, {\n                    params: {\n                        state:  filters.find(f => f.active).state,\n                        per_page: 5\n                    }\n                })\n            ]);\n\n            setRepositorio(repositorioData.data);\n            setIssues(issuesData.data);\n            setLoading(false);\n\n        }\n        load();\n\n    }, [filters, match.params.repositorio]);\n\n    useEffect(() => {\n        async function loadIssue() {\n            const nomeRepo = decodeURIComponent(match.params.repositorio);\n            const response = await api.get(`/repos/${nomeRepo}/issues`, {\n                params: {\n                    state: filters[filterIndex].state,\n                    page,\n                    per_page: 5,\n                },\n            });\n            setIssues(response.data);\n        }\n        loadIssue();\n    }, [filterIndex, filters, match.params.repositorio, page]);\n\n    //função para paginação.\n    function handlePage(action) {\n        setPage(action === 'back' ? page -1 : page + 1)\n    }\n\n    function handleFilter(index) {\n        setFilterIndex(index);\n    }\n\n    if(loading) {\n        return (\n        <Loading>\n            <h1>Carregando...</h1>\n        </Loading>\n      )\n    }\n\n    return (\n        <Container>\n            <BackButton to=\"/\">\n                <FaArrowLeft color=\"#000\" size={35} />\n            </BackButton>\n            <Owner>\n                <img src={repositorio.owner.avatar_url} alt=\"{repositorio.owner.login}\" />\n                <h1>{repositorio.name}</h1>\n                <p>{repositorio.description}</p>\n            </Owner>\n            <FilterList active={filterIndex}>\n                {filters.map((filter, index) => (\n                    <button type=\"button\" key={filter.label} onClick={() => handleFilter(index)}>\n                        {filter.label}\n                    </button>\n                ))}\n            </FilterList>\n            <IssuesList>\n                {issues.map(issue => (\n                    <li key={String(issue.id)}>\n                        <img src={issue.user.avatar_url} alt={issue.user.login} />\n                        <div>\n                            <strong>\n                                <a href={issue.html_url}>{issue.title}</a>\n                                {issue.labels.map(label => (\n                                    <span key={String(label.id)}>{label.name}</span>\n                                ))}\n                            </strong>\n                            <p>{issue.user.login}</p>\n                        </div>\n                    </li>\n                ))}\n            </IssuesList>\n            <PageActions>\n                <button type=\"button\" onClick={() => handlePage('back')} disabled={page < 2}>Anterior</button>\n                <button type=\"button\" onClick={() => handlePage('next')}>Próxima</button>\n            </PageActions>\n\n        </Container>\n    )\n}\n// style={{color: '#FFF'}}","C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Main\\styles.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\pages\\Repositorio\\styles.js",[],[],"C:\\Users\\eduar\\Documents\\Projeto-Repositorios\\src\\services\\api.js",[],[],{"ruleId":"97","severity":1,"message":"98","line":13,"column":21,"nodeType":"99","messageId":"100","endLine":13,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":13,"column":21,"nodeType":"99","messageId":"100","endLine":13,"endColumn":31},"no-unused-vars","'setFilters' is assigned a value but never used.","Identifier","unusedVar"]